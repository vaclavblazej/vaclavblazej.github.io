<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Research on Homepage of Vašek</title>
    <link>https://vaclavblazej.github.io/pub/</link>
    <description>Recent content in Research on Homepage of Vašek</description>
    <generator>Hugo</generator>
    <language>en</language>
    <copyright>© Václav Blažej</copyright>
    <lastBuildDate>Sun, 14 Sep 2025 00:00:00 +0000</lastBuildDate>
    <atom:link href="https://vaclavblazej.github.io/pub/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Bridging Treewidth and Clique-width via Cograph-Modular-Treewidth</title>
      <link>https://vaclavblazej.github.io/pub/2025/cmtw/</link>
      <pubDate>Sun, 14 Sep 2025 00:00:00 +0000</pubDate>
      <guid>https://vaclavblazej.github.io/pub/2025/cmtw/</guid>
      <description>&lt;h2 id=&#34;abstract&#34;&gt;Abstract&lt;/h2&gt;&#xA;&lt;p&gt;Many classic graph problems &amp;ndash; such as Isomorphism, Max Cut, Chromatic Number, Edge Dominating Set and Hamiltonian Cycle &amp;ndash; are known to be polynomial-time solvable on cographs, fixed-parameter tractable (FPT) when parameterized by treewidth, yet W[1]-hard when parameterized by clique-width.&#xA;This reveals a sharp tractability gap between treewidth and clique-width.&#xA;In this work, we propose a new structural graph parameter, $\mathcal{C}$-modular-treewidth, which lies between treewidth and clique-width.&#xA;The parameter leverages modular decomposition and restricts modules to induce graphs from a fixed class $\mathcal{C}$ (e.g., cographs or edgeless graphs).&#xA;By exploiting true and false twins &amp;ndash; a hallmark of cograph-like structure &amp;ndash; our parameter allows the design of efficient algorithms for several hard problems beyond the reach of treewidth-based methods.&#xA;In this work, we show that $\mathcal{C}$-modular-treewidth enables efficient solutions under suitable choices of $\mathcal{C}$, opening a new pathway in the parameterized complexity landscape between treewidth and clique-width.&#xA;In particular we show that&lt;/p&gt;</description>
    </item>
    <item>
      <title>Parameterized Complexity of Directed Traveling Salesman Problem</title>
      <link>https://vaclavblazej.github.io/pub/2025/directed_tsp/</link>
      <pubDate>Mon, 30 Jun 2025 00:00:00 +0000</pubDate>
      <guid>https://vaclavblazej.github.io/pub/2025/directed_tsp/</guid>
      <description>&lt;h2 id=&#34;abstract&#34;&gt;Abstract&lt;/h2&gt;&#xA;&lt;p&gt;The Directed Traveling Salesman Problem (DTSP) is a variant of the classical Traveling Salesman Problem in which the edges in the graph are directed and a vertex and edge can be visited multiple times.&#xA;The goal is to find a directed closed walk of minimum length (or total weight) that visits every vertex of the given graph at least once.&#xA;In a yet more general version, Directed Waypoint Routing Problem (DWRP), some vertices are marked as terminals and we are only required to visit all terminals.&#xA;Furthermore, each edge has its capacity bounding the number of times this edge can be used by a solution.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Tractable Graph Structures in EFX Orientation</title>
      <link>https://vaclavblazej.github.io/pub/2025/efx_orientation/</link>
      <pubDate>Thu, 19 Jun 2025 00:00:00 +0000</pubDate>
      <guid>https://vaclavblazej.github.io/pub/2025/efx_orientation/</guid>
      <description>&lt;h2 id=&#34;abstract&#34;&gt;Abstract&lt;/h2&gt;&#xA;&lt;p&gt;Since its introduction, envy-freeness up to any good (EFX) has become a fundamental solution concept in fair division of indivisible goods. Its existence, however, remains elusive&amp;mdash;even for four agents with additive utility functions, it is unknown whether an EFX allocation always exists. Unsurprisingly, researchers have explored restricted settings to delineate tractable and intractable cases.&#xA;Christadolou, Fiat et al. [EC&#39;23] introduced the notion of EFX-orientation, where the agents form the vertices of a graph and the items correspond to edges, and an agent values only the items that are incident to it. The goal is to allocate items to one of the adjacent agents while satisfying the EFX condition.&#xA;This graph based setting has received considerable attention and has led to a growing body of work.&lt;/p&gt;</description>
    </item>
    <item>
      <title>A Parameterized Perspective of All-Colors</title>
      <link>https://vaclavblazej.github.io/pub/2025/light_switching/</link>
      <pubDate>Thu, 30 Jan 2025 00:00:00 +0000</pubDate>
      <guid>https://vaclavblazej.github.io/pub/2025/light_switching/</guid>
      <description>&lt;h2 id=&#34;abstract&#34;&gt;Abstract&lt;/h2&gt;&#xA;&lt;p&gt;In this paper, we study the All-Colors problem: given a graph $G$ each of whose vertices is equipped with a button and assigned a color value from the set ${0,1, \dots, m-1}$ and an integer $k$, can we reach color value $1 \bmod m$ on every vertex of $G$ by pressing the button at most $k$ times.&#xA;The rule we follow is the following: if a button of a corresponding vertex is pressed one time, then the color values of the vertex and its neighbors are incremented by 1.&#xA;This problem is known to be NP-hard  on bipartite graphs even when $m = 2$ [Theor.~Comput.~Sci.,  2007], although linear time solvable on trees [SIAM J.~Comput., 2004].&#xA;In this work, we study this problem in the realm of parameterized complexity with respect to several parameters.&#xA;In particular, we show the followings for All-Colors.&#xA;W[1]-hard when parameterized by solution size $k$.&#xA;FPT algorithm parameterized by solution size + maximum degree.&#xA;FPT algorithm parameterized by treewidth or clique-width.&#xA;NP-hard on sub-cubic planar graphs.&lt;/p&gt;</description>
    </item>
    <item>
      <title>On Controlling Knockout Tournaments Without Perfect Information</title>
      <link>https://vaclavblazej.github.io/pub/2024/probabilistic_tournament_fixing/</link>
      <pubDate>Mon, 05 Aug 2024 00:00:00 +0000</pubDate>
      <guid>https://vaclavblazej.github.io/pub/2024/probabilistic_tournament_fixing/</guid>
      <description>&lt;h2 id=&#34;abstract&#34;&gt;Abstract&lt;/h2&gt;&#xA;&lt;p&gt;Over the last decade, extensive research has been conducted on the algorithmic aspects of designing single-elimination (SE) tournaments.&#xA;Addressing natural questions of algorithmic tractability, we identify key properties of input instances that enable the tournament designer to efficiently schedule the tournament in a way that maximizes the chances of a preferred player winning.&#xA;Much of the prior algorithmic work on this topic focuses on the perfect (complete and deterministic) information scenario, especially in the context of fixed-parameter algorithm design.&#xA;Our contributions constitute the first fixed-parameter tractability results applicable to more general settings of SE tournament design with potential imperfect information.&lt;/p&gt;</description>
    </item>
    <item>
      <title>On the Parameterized Complexity of Eulerian Strong Component Arc Deletion</title>
      <link>https://vaclavblazej.github.io/pub/2024/eulertian_strong_components/</link>
      <pubDate>Mon, 05 Aug 2024 00:00:00 +0000</pubDate>
      <guid>https://vaclavblazej.github.io/pub/2024/eulertian_strong_components/</guid>
      <description>&lt;h2 id=&#34;abstract&#34;&gt;Abstract&lt;/h2&gt;&#xA;&lt;p&gt;In this paper, we study the Eulerian Strong Component Arc Deletion problem, where the input is a directed multigraph and the goal is to delete the minimum number of arcs to ensure every strongly connected component of the resulting digraph is Eulerian.&lt;/p&gt;&#xA;&lt;p&gt;This problem is a natural extension of the Directed Feedback Arc Set problem and is also known to be motivated by certain scenarios arising in the study of housing markets.&#xA;The complexity of the problem, when parameterized by solution size (i.e., size of the deletion set), has remained unresolved and has been highlighted in several papers.&#xA;In this work, we answer this question by ruling out (subject to the usual complexity assumptions) a fixed-parameter tractable (FPT) algorithm for this parameter and conduct a broad analysis of the problem with respect to other natural parameterizations.&#xA;We prove both positive and negative results.&#xA;Among these, we demonstrate that the problem is also hard (W[1]-hard or even para-NP-hard) when parameterized by either treewidth or maximum degree alone.&#xA;Complementing our lower bounds, we establish that the problem is in XP when parameterized by treewidth and FPT when parameterized either by both treewidth and maximum degree or by both treewidth and solution size.&#xA;We show that these algorithms have near-optimal asymptotic dependence on the treewidth assuming the Exponential Time Hypothesis.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Equitable Connected Partition and Structural Parameters Revisited: N-fold Beats Lenstra</title>
      <link>https://vaclavblazej.github.io/pub/2024/equitable_connected_partition/</link>
      <pubDate>Tue, 25 Jun 2024 00:00:00 +0000</pubDate>
      <guid>https://vaclavblazej.github.io/pub/2024/equitable_connected_partition/</guid>
      <description>&lt;h2 id=&#34;abstract&#34;&gt;Abstract&lt;/h2&gt;&#xA;&lt;p&gt;We study the Equitable Connected Partition (ECP for short) problem, where we are given a graph $G=(V,E)$ together with an integer $p$, and our goal is to find a partition of $V$ into $p$ parts such that each part induces a connected sub-graph of $G$ and the size of each two parts differs by at most 1.&#xA;On the one hand, the problem is known to be NP-hard in general and W[1]-hard with respect to the path-width, the feedback-vertex set, and the number of parts $p$ combined.&#xA;On the other hand, fixed-parameter algorithms are known for parameters the vertex-integrity and the max leaf number.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Constrained and Ordered Level Planarity Parameterized by the Number of Levels</title>
      <link>https://vaclavblazej.github.io/pub/2024/xnlp_level_planarity/</link>
      <pubDate>Wed, 07 Feb 2024 00:00:00 +0000</pubDate>
      <guid>https://vaclavblazej.github.io/pub/2024/xnlp_level_planarity/</guid>
      <description>&lt;p&gt;We are given a graph where each vertex is assigned a position with an arbitrary x-coordinate, but y-coordinate being 1 to $k$.&#xA;The question is whether it is possible to embed the edges in a planar way so that each edge is y-monotone &amp;ndash; meaning from the lower vertex the edge always increases in y-coordinate until it reaches the other vertex.&lt;/p&gt;&#xA;&lt;p&gt;Note the problem can also be posed as having the vertices assigned to horizontal lines and given their left-to-right order.&#xA;Our original investigation concerned the case where the order is not total (called constrained level planarity).&#xA;For that variant it was known that 2 levels are easy and 5 levels are NP-hard (by a reduction from 3-partition).&#xA;We improved the hardness to 4 levels and 3 levels were investigated deeper.&#xA;It turns out that 3 levels can be solved, but the algorithm is quite complex.&lt;/p&gt;</description>
    </item>
    <item>
      <title>On the smallest synchronizing terms of finite tree automata</title>
      <link>https://vaclavblazej.github.io/pub/2023/synchronization/</link>
      <pubDate>Sat, 20 May 2023 00:00:00 +0000</pubDate>
      <guid>https://vaclavblazej.github.io/pub/2023/synchronization/</guid>
      <description>&lt;p&gt;It is well-known that the shortest synchronizing words for any automata lies between $n^2$ and roughly $n^3$.&#xA;We focused on the same question but for tree automata, i.e., what are the &amp;ldquo;smallest&amp;rdquo; terms which sychronize a tree automaton?&lt;/p&gt;&#xA;&lt;p&gt;It became clear that classical notion of sychronization does not 1-to-1 correspond to this new setting, so we define &amp;ldquo;weak&amp;rdquo; and &amp;ldquo;strong&amp;rdquo; synchronization and show bounds for both.&#xA;The weak sychronization is more string-like &amp;ndash; the interesting part of simpmlest synchronization terms boil down to a single path which is basically a string.&#xA;Surprisingly, the classical lower-bounds for strings stop working in this setting as it is not at all obvious that the sychronizing term cannot do something clever with the two subtrees to sychronize swiftly &amp;ndash; this takes mental effort to persuade yourself that is it not trivial.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Online Ramsey numbers: Long versus short cycles</title>
      <link>https://vaclavblazej.github.io/pub/2023/ramsey_cycles/</link>
      <pubDate>Wed, 29 Mar 2023 00:00:00 +0000</pubDate>
      <guid>https://vaclavblazej.github.io/pub/2023/ramsey_cycles/</guid>
      <description>&lt;p&gt;In Online Ramsey games we have two players.&#xA;One is placing edges to a graph with infinite number of vertices while the second chooses their color to be blue or red immediately.&#xA;Builder (the first player) aims to force a monochromatic graph to appear.&#xA;Painter (the second player) tries to postpone win of the first player as long as possible.&#xA;Due to Ramsey theorem, we know that the first player eventually wins.&#xA;Our aim is to analyze the game to determine the minimum number of rounds necessary for the first player win.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Computing m-Eternal Domination Number of Cactus Graphs in Linear Time</title>
      <link>https://vaclavblazej.github.io/pub/2023/cacti_eternal_domination/</link>
      <pubDate>Thu, 26 Jan 2023 00:00:00 +0000</pubDate>
      <guid>https://vaclavblazej.github.io/pub/2023/cacti_eternal_domination/</guid>
      <description>&lt;p&gt;This paper is a culmination of a long-term effort of me and Matyáš under the supervision of Tomáš.&#xA;It was initiated by Bachelor&amp;rsquo;s thesis of Matyáš which then turned into &lt;a href=&#34;../../2019/cacti_eternal_domination/&#34;&gt;a published paper&lt;/a&gt;.&lt;/p&gt;&#xA;&lt;p&gt;The reserach concerns m-eternal domination &amp;ndash; a setting where two players, attacked and defender, play in turns.&#xA;One designs the initial layout of $k$ guards on the input graph and tells how they are all moved.&#xA;Each turn the attacked announces a vertex and the defender can move all guards, each by at most one edge, so that the attacked vertex now contains a guard.&#xA;Clearly, this game played in only one turn is equivalent to the dominating set.&#xA;The tricky part is that we play virtually infinite number of rounds and if there is a strategy of an attacker to force an undefended vertex, then he wins.&#xA;For example, paths require N/2 guards while only N/3 is its domination number.&lt;/p&gt;</description>
    </item>
    <item>
      <title>The Parameterized Complexity of Network Microaggregation</title>
      <link>https://vaclavblazej.github.io/pub/2023/microaggregation/</link>
      <pubDate>Wed, 30 Nov 2022 00:00:00 +0000</pubDate>
      <guid>https://vaclavblazej.github.io/pub/2023/microaggregation/</guid>
      <description>&lt;h2 id=&#34;abstract&#34;&gt;Abstract&lt;/h2&gt;&#xA;&lt;p&gt;Microaggregation is a classical statistical disclosure control technique which requires the input data to be partitioned into clusters while adhering to specified size constraints.&#xA;We provide novel exact algorithms and lower bounds for the task of microaggregating a given network while considering both unrestricted and connected clusterings, and analyze these from the perspective of the parameterized complexity paradigm.&#xA;Altogether, our results assemble a complete complexity-theoretic picture for the network microaggregation problem with respect to the most natural parameterizations of the problem, including input-specified parameters capturing the size and homogeneity of the clusters as well as the treewidth and vertex cover number of the network.&lt;/p&gt;</description>
    </item>
    <item>
      <title>On Polynomial Kernels for Traveling Salesperson Problem and its Generalizations</title>
      <link>https://vaclavblazej.github.io/pub/2022/tsp-kernels/</link>
      <pubDate>Mon, 27 Jun 2022 00:00:00 +0000</pubDate>
      <guid>https://vaclavblazej.github.io/pub/2022/tsp-kernels/</guid>
      <description>&lt;p&gt;We investigated kernels for TSP and a related problem called &lt;em&gt;Waypoint routing&lt;/em&gt; (WRP) &amp;ndash; a variant of TSP where one needs to only visit a subset of vertices (subset TSP) and edges have capacities for the maximum number of their traversal within the solution.&#xA;Compared to the classical TSP where one may create edges that represent shortest paths, we leave the graph unchanged and analyze properties of the solution on the graph.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Polynomial Kernels for Tracking Shortest Paths</title>
      <link>https://vaclavblazej.github.io/pub/2022/tracking-paths/</link>
      <pubDate>Mon, 27 Jun 2022 00:00:00 +0000</pubDate>
      <guid>https://vaclavblazej.github.io/pub/2022/tracking-paths/</guid>
      <description>&lt;p&gt;&lt;em&gt;Tracking Shortest Paths&lt;/em&gt; is a task where we want to add $k$ trackers to a directed acyclic graph so that any shortest path which goes from source to the target activates a unique combination of trackers.&#xA;In other words, there are no two paths that would activate the same set of trackers.&#xA;One can study this problem also in variant where the paths are not necessarily shortest &amp;ndash; this is called &lt;em&gt;Tracking Paths&lt;/em&gt; problem.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Efficient attack sequences in m-eternal domination</title>
      <link>https://vaclavblazej.github.io/pub/2022/edn-attack-sequences/</link>
      <pubDate>Mon, 02 May 2022 00:00:00 +0000</pubDate>
      <guid>https://vaclavblazej.github.io/pub/2022/edn-attack-sequences/</guid>
      <description>&lt;p&gt;We are given a graph and a number of guards to defend it against a sequence of vertex attacks.&#xA;Defender controls the guards and may move every guard by at most one edge after each attack.&#xA;After his move the attacked vertex must be occupied by a guard, otherwise the attacked wins.&#xA;Defender wins if he has a strategy that defends the graph indefinitely.&lt;/p&gt;&#xA;&lt;p&gt;We investigate this problem for trees where the optimal strategy was already known.&#xA;However, if the defender has insufficient number of guards, then how can we attack efficiently?&#xA;We analyze the worst case where the defender is missing a single guard to be able to defend indefinitely.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Controlling the Spread of Two Secrets in Diverse Social Networks</title>
      <link>https://vaclavblazej.github.io/pub/2022/group-selection/</link>
      <pubDate>Mon, 20 Sep 2021 00:00:00 +0000</pubDate>
      <guid>https://vaclavblazej.github.io/pub/2022/group-selection/</guid>
      <description>&lt;h2 id=&#34;abstract&#34;&gt;Abstract&lt;/h2&gt;&#xA;&lt;p&gt;Information diffusion in social networks is a well-studied concept in social choice theory.&#xA;We propose the study of the diffusion of two secrets in a heterogeneous environment from the complexity perspective, that is, there are two different networks with the same set of agents (e.g., the structure of the set of followers might be different in two distinct social networks).&#xA;Formally, our model combines two group identification processes for which we do have independent desiderata&amp;mdash;either constructive, where we would like a given group of agents to be exposed to a secret, or destructive, where a given group of agents should not be exposed to a secret.&#xA;To be able to reach these targets, we can either delete an agent or introduce a previously latent agent.&#xA;Our results are mostly negative&amp;mdash;all of the problems are NP-hard.&#xA;Therefore, we propose a parameterized study with respect to the natural parameters, the number of influenced agents, the size of the required/protected agent sets, and the duration of the diffusion process.&#xA;Most of the studied problems remain W[1]-hard even for a combination of these parameters.&#xA;We complement these results with nearly optimal XP algorithms.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Constant Factor Approximation for Tracking Paths and Fault Tolerant Feedback Vertex Set</title>
      <link>https://vaclavblazej.github.io/pub/2021/tracking_paths_approximation/</link>
      <pubDate>Wed, 04 Aug 2021 00:00:00 +0000</pubDate>
      <guid>https://vaclavblazej.github.io/pub/2021/tracking_paths_approximation/</guid>
      <description>&lt;p&gt;Consider a vertex-weighted graph $G$ with a source $s$ and a target $t$.&#xA;&lt;em&gt;Tracking Paths&lt;/em&gt; requires finding a minimum weight set of vertices (&lt;em&gt;trackers&lt;/em&gt;) such that the sequence of trackers in each path from $s$ to $t$ is unique.&#xA;In this work, we derive a factor $6$-approximation algorithm for Tracking Paths in weighted graphs and a factor $4$-approximation algorithm if the input is unweighted.&#xA;This is the first constant factor approximation for this problem.&#xA;While doing so, we also study approximation of the closely related &lt;em&gt;$r$-Fault Tolerant Feedback Vertex Set&lt;/em&gt; problem.&#xA;There, for a fixed integer $r$ and a given vertex-weighted graph $G$, the task is to find a minimum weight set of vertices intersecting every cycle of $G$ in at least $r+1$ vertices.&#xA;We give a factor $\mathcal{O}(r)$ approximation algorithm for &lt;em&gt;$r$-Fault Tolerant Feedback Vertex Set&lt;/em&gt; if $r$ is a constant.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Non-homotopic Loops with a Bounded Number of Pairwise Intersections</title>
      <link>https://vaclavblazej.github.io/pub/2021/homotopic_loops_2/</link>
      <pubDate>Wed, 09 Jun 2021 00:00:00 +0000</pubDate>
      <guid>https://vaclavblazej.github.io/pub/2021/homotopic_loops_2/</guid>
      <description>&lt;p&gt;Improvement on our previous work &lt;a href=&#34;https://vaclavblazej.github.io/pub/2021/homotopic_loops/&#34;&gt;On the Intersections of Non-homotopic Loops&lt;/a&gt;.&lt;/p&gt;&#xA;&lt;h2 id=&#34;abstract&#34;&gt;Abstract&lt;/h2&gt;&#xA;&lt;p&gt;Let $V = {v_1, \dots, v_n}$ be a set of $n$ points in the plane and let $x \notin V$.&#xA;An &lt;em&gt;$x$-loop&lt;/em&gt; is a continuous closed curve not containing any point of $V$, except for passing exactly once through the point $x$.&#xA;We say that two $x$-loops are &lt;em&gt;non-homotopic&lt;/em&gt; if they cannot be transformed continuously into each other without passing through a point of $V$.&#xA;For $n=2$, we give an upper bound $e^{O(\sqrt{k})}$ on the maximum size of a family of pairwise non-homotopic $x$-loops such that every loop has fewer than $k$ self-intersections and any two loops have fewer than $k$ intersections.&#xA;The exponent $O(\sqrt{k})$ is asymptotically tight. The previous upper bound bound $2^{(2k)^4}$ was proved by Pach, Tardos, and T&#39;oth [&lt;em&gt;Graph Drawing 2020&lt;/em&gt;].&#xA;We prove the above result by proving the asymptotic upper bound $e^{O(\sqrt{k})}$ for a similar problem when $x \in V$, and by proving a close relation between the two problems.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Bears with Hats and Independence Polynomials</title>
      <link>https://vaclavblazej.github.io/pub/2021/bears-hats-independent/</link>
      <pubDate>Fri, 12 Mar 2021 00:00:00 +0000</pubDate>
      <guid>https://vaclavblazej.github.io/pub/2021/bears-hats-independent/</guid>
      <description>&lt;h2 id=&#34;abstract&#34;&gt;Abstract&lt;/h2&gt;&#xA;&lt;p&gt;Consider the following hat guessing game.&#xA;A bear sits on each vertex of a graph $G$, and a demon puts on each bear a hat colored by one of $h$ colors.&#xA;Each bear sees only the hat colors of his neighbors.&#xA;Based on this information only, each bear has to guess $g$ colors and he guesses correctly if his hat color is included in his guesses.&#xA;The bears win if at least one bear guesses correctly for any hat arrangement.&lt;/p&gt;</description>
    </item>
    <item>
      <title>On the Intersections of Non-homotopic Loops</title>
      <link>https://vaclavblazej.github.io/pub/2021/homotopic_loops/</link>
      <pubDate>Sun, 07 Feb 2021 00:00:00 +0000</pubDate>
      <guid>https://vaclavblazej.github.io/pub/2021/homotopic_loops/</guid>
      <description>&lt;h2 id=&#34;abstract&#34;&gt;Abstract&lt;/h2&gt;&#xA;&lt;p&gt;Let $V = {v_1, \dots, v_n}$ be a set of $n$ points in the plane and let $x \in V$.&#xA;An &lt;em&gt;$x$-loop&lt;/em&gt; is a continuous closed curve not containing any point of $V$, except of passing exactly once through the point $x$.&#xA;We say that two $x$-loops are &lt;em&gt;non-homotopic&lt;/em&gt; if they cannot be transformed continuously into each other without passing through a point of $V$.&#xA;For $n=2$, we give an upper bound $2^{O(k)}$ on the maximum size of a family of pairwise non-homotopic $x$-loops such that every loop has fewer than $k$ self-intersections and any two loops have fewer than $k$ intersections.&#xA;This result is inspired by a very recent result of Pach, Tardos, and Tóth who proved the upper bounds $2^{16k^4}$ for the slightly different scenario when $x\not\in V$.&lt;/p&gt;</description>
    </item>
    <item>
      <title>On the Edge-Length Ratio of 2-Trees</title>
      <link>https://vaclavblazej.github.io/pub/2020/2-trees_edge_ratio_drawing/</link>
      <pubDate>Tue, 25 Aug 2020 00:00:00 +0000</pubDate>
      <guid>https://vaclavblazej.github.io/pub/2020/2-trees_edge_ratio_drawing/</guid>
      <description>&lt;p&gt;We study planar straight-line drawings of graphs that minimize the ratio between the length of the longest and the shortest edge.&#xA;We answer a question of Lazard et al. [Theor. Comput. Sci. &lt;strong&gt;770&lt;/strong&gt; (2019), 88&amp;ndash;94] and, for any given constant $r$, we provide a $2$-tree which does not admit a planar straight-line drawing with a ratio bounded by $r$.&#xA;When the ratio is restricted to adjacent edges only, we prove that any $2$-tree admits a planar straight-line drawing whose edge-length ratio is at most $4 + \varepsilon$ for any arbitrarily small $\varepsilon &amp;gt; 0$, hence the upper bound on the local edge-length ratio of partial $2$-trees is $4$.&lt;/p&gt;</description>
    </item>
    <item>
      <title>On the m-eternal Domination Number of Cactus Graphs</title>
      <link>https://vaclavblazej.github.io/pub/2019/cacti_eternal_domination/</link>
      <pubDate>Mon, 15 Jul 2019 00:00:00 +0000</pubDate>
      <guid>https://vaclavblazej.github.io/pub/2019/cacti_eternal_domination/</guid>
      <description>&lt;p&gt;This research is a followup to Bachelor&amp;rsquo;s Thesis of Jan Matyáš Křišťan &lt;a href=&#34;https://alfresco.fit.cvut.cz/share/proxy/alfresco/api/node/content/workspace/SpacesStore/30deaee3-02c7-4123-b67a-78b318709c0d&#34;target=&#34;_blank&#34;&gt;(available only with sign-in)&lt;span style=&#34;white-space: nowrap;&#34;&gt;&amp;thinsp;↗&lt;/span&gt;&lt;/a&gt;.&lt;/p&gt;&#xA;&lt;h2 id=&#34;abstract&#34;&gt;Abstract&lt;/h2&gt;&#xA;&lt;p&gt;Given a graph $G$, guards are placed on vertices of $G$.&#xA;Then vertices are subject to an infinite sequence of attacks, so that each attack must be defended by a guard moving from a neighboring vertex.&#xA;The $m$-eternal domination number is the minimum number of guards such that the graph can be defended indefinitely.&#xA;In this paper we study the $m$-eternal domination number of cactus graphs, that is, graphs where each edge lies in at most two cycles, and we consider two variants of the $m$-eternal domination number: multiple guards may and may not occupy a single vertex.&#xA;We provide a new upper bound for the $m$-eternal domination number of cactus graphs, and for a subclass of cactus graphs called opuntias, where each vertex lies in at most two cycles, we prove that these two numbers are equal.&#xA;Moreover, we present a linear-time algorithm for computing them.&lt;/p&gt;</description>
    </item>
    <item>
      <title>On Induced Online Ramsey Number of Paths, Cycles, and Trees</title>
      <link>https://vaclavblazej.github.io/pub/2019/induced_ornum/</link>
      <pubDate>Fri, 11 Jan 2019 00:00:00 +0000</pubDate>
      <guid>https://vaclavblazej.github.io/pub/2019/induced_ornum/</guid>
      <description>&lt;h2 id=&#34;abstract&#34;&gt;Abstract&lt;/h2&gt;&#xA;&lt;p&gt;An online Ramsey game is a game between Builder and Painter, alternating in turns.&#xA;They are given a graph $H$ and a graph $G$ of an infinite set of independent vertices.&#xA;In each round Builder draws an edge and Painter colors it either red or blue.&#xA;Builder wins if after some finite round there is a monochromatic copy of the graph $H$, otherwise Painter wins.&#xA;The online Ramsey number $\widetilde r(H)$ is the minimum number of rounds such that Builder can force a monochromatic copy of $H$ in $G$.&#xA;This is an analogy to the size-Ramsey number $\overline r(H)$ defined as the minimum number such that there exists graph $G$ with $\overline r(H)$ edges where for any edge two-coloring $G$ contains a monochromatic copy of $H$.&lt;/p&gt;</description>
    </item>
    <item>
      <title>A Simple Streaming Bit-parallel Algorithm for Swap Pattern Matching</title>
      <link>https://vaclavblazej.github.io/pub/2015/gsm/</link>
      <pubDate>Fri, 06 Nov 2015 00:00:00 +0000</pubDate>
      <guid>https://vaclavblazej.github.io/pub/2015/gsm/</guid>
      <description>&lt;p&gt;In this paper we present a streaming algorithm for Pattern Matching with Swaps (Swap Matching).&lt;/p&gt;&#xA;&lt;h2 id=&#34;abstract&#34;&gt;Abstract&lt;/h2&gt;&#xA;&lt;p&gt;The pattern matching problem with swaps is to find all occurrences of a pattern in a text while allowing the pattern to swap adjacent symbols.&#xA;The goal is to design fast matching algorithm that takes advantage of the bit parallelism of bitwise machine instructions&#xA;and has only streaming access to the input.&#xA;We introduce a new approach to solve this problem based on the graph theoretic model and compare its performance to previously known algorithms.&#xA;We also show that an approach using deterministic finite automata cannot achieve similarly efficient algorithms.&#xA;Furthermore, we describe a fatal flaw in some of the previously published algorithms based on the same model.&#xA;Finally, we provide experimental evaluation of our algorithm on real-world data.&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
