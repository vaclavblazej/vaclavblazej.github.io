<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Graph Theory on Homepage of Vašek</title>
    <link>https://vaclavblazej.github.io/tags/graph-theory/</link>
    <description>Recent content in Graph Theory on Homepage of Vašek</description>
    <generator>Hugo</generator>
    <language>en</language>
    <copyright>© Václav Blažej</copyright>
    <lastBuildDate>Thu, 19 Jun 2025 00:00:00 +0000</lastBuildDate>
    <atom:link href="https://vaclavblazej.github.io/tags/graph-theory/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Tractable Graph Structures in EFX Orientation</title>
      <link>https://vaclavblazej.github.io/pub/2025/efx_orientation/</link>
      <pubDate>Thu, 19 Jun 2025 00:00:00 +0000</pubDate>
      <guid>https://vaclavblazej.github.io/pub/2025/efx_orientation/</guid>
      <description>&lt;h2 id=&#34;abstract&#34;&gt;Abstract&lt;/h2&gt;&#xA;&lt;p&gt;Since its introduction, envy-freeness up to any good (EFX) has become a fundamental solution concept in fair division of indivisible goods. Its existence, however, remains elusive&amp;mdash;even for four agents with additive utility functions, it is unknown whether an EFX allocation always exists. Unsurprisingly, researchers have explored restricted settings to delineate tractable and intractable cases.&#xA;Christadolou, Fiat et al. [EC&#39;23] introduced the notion of EFX-orientation, where the agents form the vertices of a graph and the items correspond to edges, and an agent values only the items that are incident to it. The goal is to allocate items to one of the adjacent agents while satisfying the EFX condition.&#xA;This graph based setting has received considerable attention and has led to a growing body of work.&lt;/p&gt;</description>
    </item>
    <item>
      <title>A Parameterized Perspective of All-Colors</title>
      <link>https://vaclavblazej.github.io/pub/2025/light_switching/</link>
      <pubDate>Thu, 30 Jan 2025 00:00:00 +0000</pubDate>
      <guid>https://vaclavblazej.github.io/pub/2025/light_switching/</guid>
      <description>&lt;h2 id=&#34;abstract&#34;&gt;Abstract&lt;/h2&gt;&#xA;&lt;p&gt;In this paper, we study the All-Colors problem: given a graph $G$ each of whose vertices is equipped with a button and assigned a color value from the set ${0,1, \dots, m-1}$ and an integer $k$, can we reach color value $1 \bmod m$ on every vertex of $G$ by pressing the button at most $k$ times.&#xA;The rule we follow is the following: if a button of a corresponding vertex is pressed one time, then the color values of the vertex and its neighbors are incremented by 1.&#xA;This problem is known to be NP-hard  on bipartite graphs even when $m = 2$ [Theor.~Comput.~Sci.,  2007], although linear time solvable on trees [SIAM J.~Comput., 2004].&#xA;In this work, we study this problem in the realm of parameterized complexity with respect to several parameters.&#xA;In particular, we show the followings for All-Colors.&#xA;W[1]-hard when parameterized by solution size $k$.&#xA;FPT algorithm parameterized by solution size + maximum degree.&#xA;FPT algorithm parameterized by treewidth or clique-width.&#xA;NP-hard on sub-cubic planar graphs.&lt;/p&gt;</description>
    </item>
    <item>
      <title>On Controlling Knockout Tournaments Without Perfect Information</title>
      <link>https://vaclavblazej.github.io/pub/2024/probabilistic_tournament_fixing/</link>
      <pubDate>Mon, 05 Aug 2024 00:00:00 +0000</pubDate>
      <guid>https://vaclavblazej.github.io/pub/2024/probabilistic_tournament_fixing/</guid>
      <description>&lt;h2 id=&#34;abstract&#34;&gt;Abstract&lt;/h2&gt;&#xA;&lt;p&gt;Over the last decade, extensive research has been conducted on the algorithmic aspects of designing single-elimination (SE) tournaments.&#xA;Addressing natural questions of algorithmic tractability, we identify key properties of input instances that enable the tournament designer to efficiently schedule the tournament in a way that maximizes the chances of a preferred player winning.&#xA;Much of the prior algorithmic work on this topic focuses on the perfect (complete and deterministic) information scenario, especially in the context of fixed-parameter algorithm design.&#xA;Our contributions constitute the first fixed-parameter tractability results applicable to more general settings of SE tournament design with potential imperfect information.&lt;/p&gt;</description>
    </item>
    <item>
      <title>On the Parameterized Complexity of Eulerian Strong Component Arc Deletion</title>
      <link>https://vaclavblazej.github.io/pub/2024/eulertian_strong_components/</link>
      <pubDate>Mon, 05 Aug 2024 00:00:00 +0000</pubDate>
      <guid>https://vaclavblazej.github.io/pub/2024/eulertian_strong_components/</guid>
      <description>&lt;h2 id=&#34;abstract&#34;&gt;Abstract&lt;/h2&gt;&#xA;&lt;p&gt;In this paper, we study the Eulerian Strong Component Arc Deletion problem, where the input is a directed multigraph and the goal is to delete the minimum number of arcs to ensure every strongly connected component of the resulting digraph is Eulerian.&lt;/p&gt;&#xA;&lt;p&gt;This problem is a natural extension of the Directed Feedback Arc Set problem and is also known to be motivated by certain scenarios arising in the study of housing markets.&#xA;The complexity of the problem, when parameterized by solution size (i.e., size of the deletion set), has remained unresolved and has been highlighted in several papers.&#xA;In this work, we answer this question by ruling out (subject to the usual complexity assumptions) a fixed-parameter tractable (FPT) algorithm for this parameter and conduct a broad analysis of the problem with respect to other natural parameterizations.&#xA;We prove both positive and negative results.&#xA;Among these, we demonstrate that the problem is also hard (W[1]-hard or even para-NP-hard) when parameterized by either treewidth or maximum degree alone.&#xA;Complementing our lower bounds, we establish that the problem is in XP when parameterized by treewidth and FPT when parameterized either by both treewidth and maximum degree or by both treewidth and solution size.&#xA;We show that these algorithms have near-optimal asymptotic dependence on the treewidth assuming the Exponential Time Hypothesis.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Equitable Connected Partition and Structural Parameters Revisited: N-fold Beats Lenstra</title>
      <link>https://vaclavblazej.github.io/pub/2024/equitable_connected_partition/</link>
      <pubDate>Tue, 25 Jun 2024 00:00:00 +0000</pubDate>
      <guid>https://vaclavblazej.github.io/pub/2024/equitable_connected_partition/</guid>
      <description>&lt;h2 id=&#34;abstract&#34;&gt;Abstract&lt;/h2&gt;&#xA;&lt;p&gt;We study the Equitable Connected Partition (ECP for short) problem, where we are given a graph $G=(V,E)$ together with an integer $p$, and our goal is to find a partition of $V$ into $p$ parts such that each part induces a connected sub-graph of $G$ and the size of each two parts differs by at most 1.&#xA;On the one hand, the problem is known to be NP-hard in general and W[1]-hard with respect to the path-width, the feedback-vertex set, and the number of parts $p$ combined.&#xA;On the other hand, fixed-parameter algorithms are known for parameters the vertex-integrity and the max leaf number.&lt;/p&gt;</description>
    </item>
    <item>
      <title>The Parameterized Complexity of Network Microaggregation</title>
      <link>https://vaclavblazej.github.io/pub/2023/microaggregation/</link>
      <pubDate>Wed, 30 Nov 2022 00:00:00 +0000</pubDate>
      <guid>https://vaclavblazej.github.io/pub/2023/microaggregation/</guid>
      <description>&lt;h2 id=&#34;abstract&#34;&gt;Abstract&lt;/h2&gt;&#xA;&lt;p&gt;Microaggregation is a classical statistical disclosure control technique which requires the input data to be partitioned into clusters while adhering to specified size constraints.&#xA;We provide novel exact algorithms and lower bounds for the task of microaggregating a given network while considering both unrestricted and connected clusterings, and analyze these from the perspective of the parameterized complexity paradigm.&#xA;Altogether, our results assemble a complete complexity-theoretic picture for the network microaggregation problem with respect to the most natural parameterizations of the problem, including input-specified parameters capturing the size and homogeneity of the clusters as well as the treewidth and vertex cover number of the network.&lt;/p&gt;</description>
    </item>
    <item>
      <title>On Polynomial Kernels for Traveling Salesperson Problem and its Generalizations</title>
      <link>https://vaclavblazej.github.io/pub/2022/tsp-kernels/</link>
      <pubDate>Mon, 27 Jun 2022 00:00:00 +0000</pubDate>
      <guid>https://vaclavblazej.github.io/pub/2022/tsp-kernels/</guid>
      <description>&lt;p&gt;We investigated kernels for TSP and a related problem called &lt;em&gt;Waypoint routing&lt;/em&gt; (WRP) &amp;ndash; a variant of TSP where one needs to only visit a subset of vertices (subset TSP) and edges have capacities for the maximum number of their traversal within the solution.&#xA;Compared to the classical TSP where one may create edges that represent shortest paths, we leave the graph unchanged and analyze properties of the solution on the graph.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Polynomial Kernels for Tracking Shortest Paths</title>
      <link>https://vaclavblazej.github.io/pub/2022/tracking-paths/</link>
      <pubDate>Mon, 27 Jun 2022 00:00:00 +0000</pubDate>
      <guid>https://vaclavblazej.github.io/pub/2022/tracking-paths/</guid>
      <description>&lt;p&gt;&lt;em&gt;Tracking Shortest Paths&lt;/em&gt; is a task where we want to add $k$ trackers to a directed acyclic graph so that any shortest path which goes from source to the target activates a unique combination of trackers.&#xA;In other words, there are no two paths that would activate the same set of trackers.&#xA;One can study this problem also in variant where the paths are not necessarily shortest &amp;ndash; this is called &lt;em&gt;Tracking Paths&lt;/em&gt; problem.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Controlling the Spread of Two Secrets in Diverse Social Networks</title>
      <link>https://vaclavblazej.github.io/pub/2022/group-selection/</link>
      <pubDate>Mon, 20 Sep 2021 00:00:00 +0000</pubDate>
      <guid>https://vaclavblazej.github.io/pub/2022/group-selection/</guid>
      <description>&lt;h2 id=&#34;abstract&#34;&gt;Abstract&lt;/h2&gt;&#xA;&lt;p&gt;Information diffusion in social networks is a well-studied concept in social choice theory.&#xA;We propose the study of the diffusion of two secrets in a heterogeneous environment from the complexity perspective, that is, there are two different networks with the same set of agents (e.g., the structure of the set of followers might be different in two distinct social networks).&#xA;Formally, our model combines two group identification processes for which we do have independent desiderata&amp;mdash;either constructive, where we would like a given group of agents to be exposed to a secret, or destructive, where a given group of agents should not be exposed to a secret.&#xA;To be able to reach these targets, we can either delete an agent or introduce a previously latent agent.&#xA;Our results are mostly negative&amp;mdash;all of the problems are NP-hard.&#xA;Therefore, we propose a parameterized study with respect to the natural parameters, the number of influenced agents, the size of the required/protected agent sets, and the duration of the diffusion process.&#xA;Most of the studied problems remain W[1]-hard even for a combination of these parameters.&#xA;We complement these results with nearly optimal XP algorithms.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Constant Factor Approximation for Tracking Paths and Fault Tolerant Feedback Vertex Set</title>
      <link>https://vaclavblazej.github.io/pub/2021/tracking_paths_approximation/</link>
      <pubDate>Wed, 04 Aug 2021 00:00:00 +0000</pubDate>
      <guid>https://vaclavblazej.github.io/pub/2021/tracking_paths_approximation/</guid>
      <description>&lt;p&gt;Consider a vertex-weighted graph $G$ with a source $s$ and a target $t$.&#xA;&lt;em&gt;Tracking Paths&lt;/em&gt; requires finding a minimum weight set of vertices (&lt;em&gt;trackers&lt;/em&gt;) such that the sequence of trackers in each path from $s$ to $t$ is unique.&#xA;In this work, we derive a factor $6$-approximation algorithm for Tracking Paths in weighted graphs and a factor $4$-approximation algorithm if the input is unweighted.&#xA;This is the first constant factor approximation for this problem.&#xA;While doing so, we also study approximation of the closely related &lt;em&gt;$r$-Fault Tolerant Feedback Vertex Set&lt;/em&gt; problem.&#xA;There, for a fixed integer $r$ and a given vertex-weighted graph $G$, the task is to find a minimum weight set of vertices intersecting every cycle of $G$ in at least $r+1$ vertices.&#xA;We give a factor $\mathcal{O}(r)$ approximation algorithm for &lt;em&gt;$r$-Fault Tolerant Feedback Vertex Set&lt;/em&gt; if $r$ is a constant.&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
