<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Feature on Homepage of Vašek</title>
    <link>https://vaclavblazej.github.io/tags/feature/</link>
    <description>Recent content in Feature on Homepage of Vašek</description>
    <generator>Hugo</generator>
    <language>en</language>
    <managingEditor>blazeva1 -a- fit.cvut.cz &lt;Václav Blažej&gt; (Václav Blažej)</managingEditor>
    <webMaster>blazeva1 -a- fit.cvut.cz &lt;Václav Blažej&gt; (Václav Blažej)</webMaster>
    <copyright>© Václav Blažej</copyright>
    <lastBuildDate>Sat, 04 Jun 2022 00:00:00 +0000</lastBuildDate>
    <atom:link href="https://vaclavblazej.github.io/tags/feature/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Simple data consistency with two-sided references</title>
      <link>https://vaclavblazej.github.io/post/2022/link/</link>
      <pubDate>Sat, 04 Jun 2022 00:00:00 +0000</pubDate><author>blazeva1 -a- fit.cvut.cz &lt;Václav Blažej&gt; (Václav Blažej)</author>
      <guid>https://vaclavblazej.github.io/post/2022/link/</guid>
      <description>&lt;p&gt;Imagine a programming language where the references can be mutual.&#xA;What exactly does this mean and would such a feature be useful?&lt;/p&gt;&#xA;&lt;h1 id=&#34;basics&#34;&gt;Basics&lt;/h1&gt;&#xA;&lt;p&gt;Standard way to declare reference attribute is to set its name and type.&#xA;We imagine a case where one could also declare attribute in the target class which would become mutually tied to the currently defined attribute.&#xA;The declaration could look as in the following example.&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-cpp&#34; data-lang=&#34;cpp&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;class&lt;/span&gt; &lt;span style=&#34;color:#458;font-weight:bold&#34;&gt;Person&lt;/span&gt; {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#900;font-weight:bold&#34;&gt;passport&lt;/span&gt;: Passport.person;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;class&lt;/span&gt; &lt;span style=&#34;color:#458;font-weight:bold&#34;&gt;Passport&lt;/span&gt; {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#900;font-weight:bold&#34;&gt;person&lt;/span&gt;: Person.passport;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Having an instance &lt;code&gt;adam&lt;/code&gt; of the &lt;code&gt;Person&lt;/code&gt; class setting &lt;code&gt;adam.passport = a&lt;/code&gt; would automatically set &lt;code&gt;a.person = adam&lt;/code&gt;.&#xA;Additionally, if the passport &lt;code&gt;a&lt;/code&gt; was already set to another person, then setting the attribute would remove this passport from its previous owner.&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
